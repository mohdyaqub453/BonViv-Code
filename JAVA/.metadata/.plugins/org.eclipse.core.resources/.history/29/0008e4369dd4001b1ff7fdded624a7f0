import org.apache.jena.rdf.model.Model;
import org.apache.jena.rdf.model.ModelFactory;
import org.apache.jena.rdf.model.RDFNode;
import org.apache.jena.rdf.model.Resource;
import org.apache.jena.vocabulary.*;
import org.apache.http.client.protocol.HttpClientContext;
import org.apache.jena.query.*;
import org.apache.jena.sparql.core.DatasetImpl;
import org.apache.jena.sparql.engine.http.QueryEngineHTTP;
import org.apache.jena.tdb.TDBFactory;

public class database {

	public static void main(String[] args) {
		 
	
		  String directory = "MyDatabases/dataset" ;
		  Dataset dataset = TDBFactory.createDataset(directory) ;
		
		  dataset.begin(ReadWrite.READ) ;
		  // Get model inside the transaction
		  Model model = dataset.getDefaultModel() ;
		  model.write(System.out ,"TURTLE");
		 /* dataset.end() ;
		  
		  dataset.begin(ReadWrite.WRITE) ;
		  model = dataset.getDefaultModel() ;
		  Model model1 = ModelFactory.createDefaultModel();
		  model.read("example.jsonld") ;
		  model.add(model1);
		  
		  model.commit(); 
		  dataset.end() ;*/
		  
		  String querystring = "prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n"
					+ "prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n"
					+ "prefix owl: <http://www.w3.org/2002/07/owl#>\r\n"
					+ "prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n"
					+ "prefix ab: <http://learningsparql.com/ns/addressbook#>\r\n"
					+ "prefix d:<http://learningsparql.com/ns/data#>\r\n"
					+ "SELECT ?Title ?Genre ?Author_Name ?Author_age\r\n"
					+ "WHERE {\r\n"
					+ "  \r\n"
					+ "		?subject  ab:Title ?Title;\r\n"
					+ "                  ab:Genre ?Genre;\r\n"
					+ "                  ab:authors ?author.\r\n"
					+ "         ?author ab:Author_Name ?Author_Name;\r\n"
					+ "                 ab:Age ?Author_age.\r\n"
					+ "                  \r\n"
					+ "                  \r\n"
					+ "\r\n"
					+ "          \r\n"
					+ "}";
			
			
		  Query query = QueryFactory.create(querystring);
			QueryExecution qexec =QueryExecutionFactory.create(query, model);
			
			try 
			{
				ResultSet result =qexec.execSelect();
				while(result.hasNext()) {
					QuerySolution soln = result.nextSolution();
					RDFNode Title = soln.get("?Title");
					RDFNode author = soln.get("?Author_Name");
					System.out.println("Title "+ Title + "   Author "+ author);
				}
			}
			finally {
				qexec.close();
			}
			}

}
